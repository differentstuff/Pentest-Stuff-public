$ArrComputers = "localhost"
$OutputLog = ".\output.log"
$NotRespondingLog = ".\notresponding.log"
$ErrorActionPreference = "Stop"
Clear-Host

$data = ForEach ($Computer in $ArrComputers) {
  try {
    $computerSystem = get-wmiobject Win32_ComputerSystem -Computer $Computer
    $computerBIOS = get-wmiobject Win32_BIOS -Computer $Computer
    $computerOS = get-wmiobject Win32_OperatingSystem -Computer $Computer
    $computerCPU = get-wmiobject Win32_Processor -Computer $Computer
    $computerHDD = Get-WmiObject Win32_LogicalDisk -Computer $Computer -Filter drivetype=3
    $Version = Get-WmiObject -Namespace "Root\CIMv2" `
        -Query "Select * from Win32_ComputerSystemProduct" `
        -computer $computer | select -ExpandProperty version
    $MonitorInfo = gwmi WmiMonitorID -Namespace root\wmi -computername  $computer |
      Select -last 1 @{n="Model"; e={[System.Text.Encoding]::ASCII.GetString($_.UserFriendlyName -ne 00)}},
        @{n="Serial Number";e={[System.Text.Encoding]::ASCII.GetString($_.SerialNumberID -ne 00)}}  
  } catch {
    $Computer | Out-File -FilePath $NotRespondingLog -Append -Encoding UTF8
    continue
  }


  $props = [ordered]@{
    'User' = $computerSystem.UserName
    'PC Serial Number'  = $computerBIOS.SerialNumber
    'CPU' = $computerCPU.Name
    'Model'          = $computerSystem.Model
    'HDDSize' = [math]::Round($computerHDD.Size/1GB)
    'RAM' = [math]::Round($computerSystem.TotalPhysicalMemory/1GB)
    'OS' = $computerOS.caption
    'PCName'         = $computerSystem.Name
    #'Version'        = $Version
    'Monitor Model'  = $MonitorInfo.Model
    'Monitor Serial' = $MonitorInfo."Serial Number"
    
  }
  New-Object -Type PSCustomObject -Property $props
}

$data | Export-Csv 'C:\Windows\Users\xxxx\Desktop\Monitor_system_info.csv' -NoType -Append

# Open CSV file for review (leave this line out when deploying)
notepad Workstation-inventory.csv