# can be used for: https://github.com/blackarrowsec/redteam-research/tree/master/LPE%20via%20StorSvc
# finds writable path for SprintCSP.dll

function Check-WritePermissionInPath {
    [CmdletBinding()]
    param()

    # Enable verbose output
    $VerbosePreference = 'Continue'

    # Run the registry query to get the PATH environment variable
    $regOutput = reg query "HKLM\SYSTEM\CurrentControlSet\Control\Session Manager\Environment" -v Path
    $splitOutput = $regOutput -split "\s+"
    $index = [array]::IndexOf($splitOutput, "REG_EXPAND_SZ")
    $startIndex = $index + 1
    $endIndex = $splitOutput.Length - 1
    $pathValue = ($splitOutput[$startIndex..$endIndex] -join ' ').Trim()

    # Split the PATH into individual directories
    $directories = $pathValue -split ";"

    # Initialize an array to hold directories with write access
    $writeAccessDirs = @()

    # Loop through each directory to check for write access
    foreach ($dir in $directories) {

        # Skip if directory is an empty string
        if ([string]::IsNullOrEmpty($dir)) {

            continue

        }

        # Resolve environment variables in the path
        $resolvedDir = [System.Environment]::ExpandEnvironmentVariables($dir)

        # Check if directory exists
        if (Test-Path $resolvedDir) {

            # Get the ACL for the directory
            $acl = Get-Acl -Path $resolvedDir

            $writeAccessFound = $false  # Initialize flag

            # Check if the current user has write access
            foreach ($access in $acl.Access) {

                if ($access.IdentityReference -eq [System.Security.Principal.WindowsIdentity]::GetCurrent().Name -and $access.FileSystemRights -match "Write") {

                    Write-Verbose "Write access found for path: $resolvedDir"
                    $writeAccessDirs += $resolvedDir
                    $writeAccessFound = $true  # Set flag
                    break  # Exit the loop once write access is found

                }

            }

            if (-not $writeAccessFound) {

                Write-Verbose "No write access for path: $resolvedDir"

            }

        }

    }

    # Print directories where the current user has write access
    Write-Host -ForegroundColor Green $writeAccessDirs

}

# Run Script
Check-WritePermissionInPath -Verbose
